BPFDoor
BPFdoor 악성코드는 리눅스 환경에서 동작하는 고도화된 백도어로, 공격자가 원격에서 시스템을 장악할 수 있도록 설계되어 있다. 
일반적인 백도어는 명령을 받기 위해 네트워크 포트를 열고 대기하지만,BPFdoor는 BPF(Berkeley Packet Filter) 기술을 악용하여 별도의 리스닝 포트를 열지 않고도 특정 명령을 수신한다. 
BPF는 원래 패킷 캡처나 네트워크 트래픽 필터링을 위해 커널 레벨에서 동작하는 기능으로, tcpdump나 Wireshark와 같은 툴이 사용하는 기술이기도 하다. 
그러나 공격자는 이를 악용해, 네트워크 인터페이스를 지나는 모든 패킷을 검사하고, 미리 정의된 매직 패킷(magic packet)만을 가로채는 필터를 등록한다. 
이 매직 패킷은 특정 포트, 프로토콜, 데이터 패턴을 포함하며 정상 트래픽과 함께 흘러가기 때문에 보안 장비에서 탐지가 어렵다.

BPFdoor가 설치된 시스템은 평소에는 정상적으로 동작하며, 매직 패킷이 도착하면 이를 트리거로 삼아 공격자와의 은밀한 통신 채널을 생성한다. 
이 채널은 기존의 합법적인 서비스 포트를 위장하거나 이미 열린 연결을 재활용해 구축되기 때문에, 외부에서 포트 스캔을 해도 백도어의 존재를 확인하기 어렵다. 
일단 채널이 형성되면 공격자는 원격에서 쉘 명령 실행, 파일 전송, 추가 악성코드 설치 등 다양한 조작을 수행할 수 있다. 
이러한 구조는 방화벽이나 IDS/IPS 같은 네트워크 보안 솔루션이 비정상적인 포트 사용을 감지하는 기존 방식으로는 탐지하기 힘들게 만든다.

이번 학습을 통해 BPFdoor의 통신 흐름은 다음과 같은 단계로 이해할 수 있었다. 
먼저 악성코드가 BPF 필터를 설정해 패킷을 감시하고, 공격자가 전송한 매직 패킷을 인식하면 내부적으로 명령 수신 루틴이 활성화된다. 
이후 공격자와의 암호화된 또는 은폐된 세션이 생성되며, 이를 통해 지속적인 명령·제어(C2) 통신이 이루어진다. 
특히, 리스닝 포트를 사용하지 않고도 원격 명령을 받을 수 있는 구조는 은밀성과 지속성을 극대화하고, 시스템 관리자나 보안 담당자가 이상 징후를 발견하기 어렵게 한다.

이러한 분석은 향후 보안 대응에 있어 비정상적인 BPF 필터 등록 여부나 네트워크에서 특정 패턴의 매직 패킷 탐지가 중요한 지표가 될 수 있음을 시사한다. 
BPFdoor의 설계 방식과 동작 원리를 이해하는 것은 침해사고 대응과 악성코드 탐지 전략 수립에 있어 필수적인 지식이다.
